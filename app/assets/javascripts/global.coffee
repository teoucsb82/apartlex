addRow = ->
  $(".upload-image-preview").append(
    "<div class='row upload-row'>
      <div class='col-xs-3'>
        <div class='thumbnail'></div>
      </div>
      <div class='col-xs-8'>
        <div class='progress'>
          <div class='progress-bar progress-bar-info progress-bar-striped active'>
          </div>
        </div>
        <span class='status'>Starting upload</span>
        <span class='original-filename'></span>
      </div>
      <div class='col-xs-1 destroy-image'>
        <a href='#' class='btn btn-danger btn-sm delete_by_token'>Remove</a>
      </div>
    </div>")
  return

formatBytes = (bytes, decimals) ->
  if bytes == 0
    return '0 Byte'
  k = 1000
  dm = decimals + 1 or 3
  sizes = [
    'Bytes'
    'KB'
    'MB'
    'GB'
    'TB'
    'PB'
    'EB'
    'ZB'
    'YB'
  ]
  i = Math.floor(Math.log(bytes) / Math.log(k))
  (bytes / k ** i).toPrecision(dm) + ' ' + sizes[i]

view_upload_details = (upload) ->
  # Build an html table out of the upload object
  rows = []
  $.each upload, (k, v) ->
    rows.push $('<tr>').append($('<td>').text(k)).append($('<td>').text(JSON.stringify(v)))
    return
  $('#info').html $('<div class="upload_details">').append('<h2>Upload metadata:</h2>').append($('<table>').append(rows))
  return

$('.upload-image-dropzone').ready ->
  # Cloudinary jQuery integration library uses jQuery File Upload widget
  # (see http://blueimp.github.io/jQuery-File-Upload/).
  # Any file input field with cloudinary-fileupload class is automatically
  # wrapped using the File Upload widget and configured for Cloudinary uploads.
  # You can further customize the configuration using .fileupload method
  # as we do below.
  $('#add-file').click (e) ->
    e.preventDefault()
    $('.cloudinary-fileupload').click()
    return

  $(".remove-image").click (e) ->
    e.preventDefault()
    $(e.target).parents(".upload-row").attr("data-active", 'true')
    $.ajax
      url: '/images/destroy'
      method: 'DELETE'
      dataType: 'json'
      data: public_id: $(this).data("public-id")
      error: ->
        return
      success: (e, data) ->
        $("[data-active='true']").fadeOut "slow", ->
          $(this).remove()
        return
      complete: ->
        $("[data-active='true']").attr("data-active", 'false')
        return
    return

  $('.cloudinary-fileupload').fileupload(
    dropZone: '.upload-image-dropzone'
    sequentialUploads: true
    start: (e) ->
      $('#complete-progress .progress-bar').addClass("progress-bar-striped active")
      return
    send: (e, data) ->
      addRow()
      return
    progressall: (e, data) ->
      $('#complete-progress .progress-bar').width(Math.round(data.loaded * 100.0 / data.total) + "%")
      return
    progress: (e, data) ->
      current_row = $(".upload-row").last()
      current_row.find('.status').text 'Uploading... ' + Math.round(data.loaded * 100.0 / data.total) + '%'
      current_row.find('.progress-bar').width(Math.round(data.loaded * 100.0 / data.total) + '%')
      return
    success: (e, data) ->
      $.ajax
        url: '/images/create'
        method: 'POST'
        dataType: 'json'
        data: 
          public_id: e.public_id
          model: "property"
          id: $("form.simple_form").attr("action").split("/")[$("form.simple_form").attr("action").split("/").length - 1]
          name: e.original_filename
        error: ->
        success: (e, data) ->
        complete: ->
      return
    fail: (e, data) ->
      $('.status').text 'Upload failed'
      return
  ).off('cloudinarydone').on 'cloudinarydone', (e, data) ->
    current_row = $(".upload-image-preview > .row").last()
    current_row.find('.status').text 'Upload finished!\n\n' + formatBytes(data.result.bytes)
    current_row.find('.progress-bar').removeClass("progress-bar-striped active")
    current_row.find('.original-filename').text(data.result.original_filename)
    img = $.cloudinary.image(data.result.public_id,
      format: data.result.format
      width: 150
      height: 150
      crop: 'fit')
    current_row.find(".thumbnail").html(img)
    current_row.find('.delete_by_token').data(delete_token: data.result.delete_token).click (e) ->
      e.preventDefault()
      confirm "Are you sure you want to remove this image?"
      $.cloudinary.delete_by_token($(this).data('delete_token')).done(->
        return
      ).fail ->
        current_row.find('.status').text 'Cannot delete image'
        return
      $(this).parents(".upload-row").fadeOut "slow", ->
        $(this).remove()
      return
    $('#complete-progress .progress-bar').removeClass("progress-bar-striped active")
    view_upload_details data.result
    return
  return

# ---
# generated by js2coffee 2.1.0
